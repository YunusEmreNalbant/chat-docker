version: '3'

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - laravel
  mysql:
    image: mysql:5.7.22
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laraveldocker
      MYSQL_USER: root
      MYSQL_PASSWORD: test123
      MYSQL_ROOT_PASSWORD: test123
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel
    volumes:
      - laravel-data:/data/db
  app:
    container_name: app

    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  composer:
    image: composer:latest
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    command: composer install -d /var/www/html
    depends_on:
      - app
    networks:
      - laravel
  laravel-echo-server:
    image: oanhnn/laravel-echo-server:latest
    depends_on:
      - redis
      - app
      - nginx
    environment:
      LARAVEL_ECHO_SERVER_AUTH_HOST: http://nginx
      LARAVEL_ECHO_SERVER_DEBUG: 'true'
      LARAVEL_ECHO_SERVER_DB: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PREFIX: laravel_
      REDIS_PASSWORD:
      REDIS_DB: 0
    networks:
      - laravel
    ports:
      - 6001:6001
    restart: unless-stopped
volumes:
  laravel-data:

